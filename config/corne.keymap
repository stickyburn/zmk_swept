/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  |  ;  | TAB  |
// | BSPC |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  | RSHFT|
// | ALT  |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  ,  |  .  |  /  | ESC  |
//                    | LCTL| ENT | UPR |   | LWR | SPC  | ALT |
                        bindings = <
   &kp TAB   &ht_tp LS(Q) Q &ht_tp LS(W) W &ht_tp LS(F) F &ht_tp LS(P) P &ht_tp LS(G) G     &ht_tp LS(J) J &ht_tp LS(L) L &ht_tp LS(U) U         &ht_tp LS(Y) Y     &ht_tp LS(SEMI) SEMI &kp TAB
   &kp BSPC  &ht_tp LS(A) A &ht_tp LS(R) R &ht_tp LS(S) S &ht_tp LS(T) T &ht_tp LS(D) D     &ht_tp LS(H) H &ht_tp LS(N) N &ht_tp LS(E) E         &ht_tp LS(I) I     &ht_tp LS(O) O       &kp RSHFT
   &kp LALT  &ht_tp LS(Z) Z &ht_tp LS(X) X &ht_tp LS(C) C &ht_tp LS(V) V &ht_tp LS(B) B     &ht_tp LS(K) K &ht_tp LS(M) M &ht_tp LS(COMMA) COMMA &ht_tp LS(DOT) DOT &ht_tp LS(FSLH) FSLH &kp ESC
                  &kp LCTL &kp RET &mo 2       &mo 1 &kp SPC &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | LFT | DWN |  UP | RGT |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8   &kp N9   &kp N0    &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans   &trans   &trans    &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
